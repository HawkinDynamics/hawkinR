% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_tests.R
\name{get_tests}
\alias{get_tests}
\title{Get All Tests or Sync Tests}
\usage{
get_tests(from, to, sync = FALSE)
}
\arguments{
\item{from}{Optionally supply a time (Unix timestamp) you want the tests from. If you do not
supply this value you will receive every test. This parameter is best suited for bulk exports of
historical data}

\item{to}{Optionally supply a time (Unix timestamp) you want the tests to. If you do not
supply this value you will receive every test from the beginning of time or the optionally
supplied \code{from} parameter. This parameter is best suited for bulk exports of historical data.}

\item{sync}{The result set will include updated and newly created tests. This parameter is best
suited to keep your database in sync with the Hawkin database. If you do not supply this value
you will receive every test.}
}
\value{
Response will be a data frame containing the trials within the time range (if specified).

\strong{id}   \emph{str}   Test trial unique ID

\strong{timestamp}   \emph{int}   UNIX timestamp of trial

\strong{segment}   \emph{chr}   Description of the test type and trial number of the session (testType:trialNo)

\strong{testType.id}   \emph{chr}   Id of the test type of the trial

\strong{testType.name}   \emph{chr}   Name of the test type of the trial

\strong{testType.canonicalId}   \emph{chr}   Canonical Id of the test type of the trial

\strong{athlete.id}   \emph{chr}   Unique Id of the athlete

\strong{athlete.name}   \emph{chr}   Athlete given name

\strong{athlete.active}   \emph{logi}   The athlete is active

\strong{athlete.teams}   \emph{list}   List containing Ids of each team the athlete is on

\strong{athlete.groups}   \emph{list}   List containing Ids of each group the athlete is in

All metrics from each test type are included as the remaining variables.
If a trial does not have data for a variable it is returned NA.
}
\description{
Get the tests for an account. You can specify a time frame from, or to, which the tests should come (or be synced).
}
\examples{
\dontrun{
# This is an example of how the function would be called.


## Call for all tests
dfAllTests <- get_tests()


## Call for all tests within a specific time frame
dfFromTo <- get_tests(from = 1689958617, to = 1691207356)


## Call for all new tests since a specific date, or any tests that have been
updated/changed since that date
dfSync <- get_tests(from = 1689958617, sync=TRUE)

}

}
