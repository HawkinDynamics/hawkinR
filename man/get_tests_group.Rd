% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_tests_group.R
\name{get_tests_group}
\alias{get_tests_group}
\title{Get Test Trials By Groups}
\usage{
get_tests_group(groupId, from, to, sync = FALSE, active = TRUE)
}
\arguments{
\item{groupId}{Supply a group’s or a string of a comma separated list of group id’s to receive tests from
specific groups. Recommended to use method \code{paste0()}. A maximum of 10 groups can be fetched at once.}

\item{from}{Optionally supply a time (Unix timestamp) you want the tests from. If you do not
supply this value you will receive every test. This parameter is best suited for bulk exports of
historical data.}

\item{to}{Optionally supply a time (Unix timestamp) you want the tests to. If you do not
supply this value you will receive every test from the beginning of time or the optionally
supplied \code{from} parameter. This parameter is best suited for bulk exports of historical data.}

\item{sync}{The result set will include updated and newly created tests. This parameter is best
suited to keep your database in sync with the Hawkin database. If you do not supply this value
you will receive every test.}

\item{active}{There was a change to the default API configuration to reflect the majority of
users API configuration. Inactive tests or tests where \code{active:false} are returned in these
configuration. Be default, \code{active} is set to TRUE. To return all tests, including disabled
trials, set \code{active} to FALSE.}
}
\value{
Response will be a data frame containing the trials from the specified team and within the time
range (if specified).

\strong{id}   \emph{str}   Test trial unique ID

\strong{active}   \emph{logi}   The trial is active and not disabled

\strong{timestamp}   \emph{int}   UNIX timestamp of trial

\strong{segment}   \emph{chr}   Description of the test type and trial number of the session (testType:trialNo)

\strong{testType.id}   \emph{chr}   Id of the test type of the trial

\strong{testType.name}   \emph{chr}   Name of the test type of the trial

\strong{testType.canonicalId}   \emph{chr}   Canonical Id of the test type of the trial

\strong{athlete.id}   \emph{chr}   Unique Id of the athlete

\strong{athlete.name}   \emph{chr}   Athlete given name

\strong{athlete.active}   \emph{logi}   The athlete is active

\strong{athlete.teams}   \emph{list}   List containing Ids of each team the athlete is on

\strong{athlete.groups}   \emph{list}   List containing Ids of each group the athlete is in

All metrics from each test type are included as the remaining variables.
If a trial does not have data for a variable it is returned NA.
}
\description{
Get only tests of the specified group for an account.
}
\examples{
\dontrun{
# This is an example of how the function would be called.


## Call for all tests by Group 1
dfGroup1 <- get_tests_group(groupId = "group1")


## Call for all tests from Groups 1 & 2
dfGroups_1_2 <- get_tests_group(groupId = paste0("group1","group2"))


## Call for all Group 1 tests since a specific date
df_Group1_Since <- get_tests_group("group1", from = 1689958617)

}

}
