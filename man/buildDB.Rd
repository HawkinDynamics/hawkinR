% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildDB.R
\name{buildDB}
\alias{buildDB}
\title{Build Local Database File}
\usage{
buildDB(startDate, testType = "all", includeInactive = FALSE,
  fileName,
  fileType = c("csv", "xlsx", "rds", "rds_gz",
     "rds_bz2", "rds_xz", "parquet", "feather"),
  span = 14)
}
\arguments{
\item{startDate}{A date string or numeric value representing the starting date for retrieving test data. Date string must be format "YYYY-MM-DD", or numerical value as EPOCH timestamp.}

\item{testType}{A character string representing the type of test to retrieve. Defaults to \code{"all"}. Can be a specific test type.}

\item{includeInactive}{A logical value indicating whether to include inactive tests. Defaults to \code{FALSE}.}

\item{fileName}{A character string representing the name of the file to save the database.}

\item{fileType}{A character string specifying the format of the file to save. Supported formats include \code{"csv"}, \code{"xlsx"}, \code{"rds"}, \code{"rds_gz"}, \code{"rds_bz2"}, \code{"rds_xz"}, \code{"parquet"}, \code{"feather"}. Defaults to \code{"csv"}.}

\item{span}{An integer value indicating the number of days to download in each increment. Defaults to 14.}
}
\value{
The function saves the resulting database to a file in the specified format and logs the process.
}
\description{
This function builds a database of prior test data from a set amount of prior days until today.
It allows setting increments to control the number of days downloaded at a time for more efficient download speeds.
The default span is 14, meaning tests will download in 14-day increments.
}
\details{
This function creates a time frame starting from the specified \code{startDate}, and iteratively downloads test data in
increments of \code{span} days. It saves the result as a file in the format specified by \code{fileType}. Supported file types include
CSV, XLSX, Parquet, Feather, and various RDS formats (with optional compression).
}
\examples{
\dontrun{
# Build a database of test data from the last 30 days and save it as a CSV

buildDB("2023-01-01", testType = "all", fileName = "test_data", fileType = "csv", span = 5)
}

}
